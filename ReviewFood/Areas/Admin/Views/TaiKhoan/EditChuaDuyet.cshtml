@model ReviewFood.Models.TaiKhoan
@{
    ViewData["Title"] = "Edit Account";
    ViewData["TitleHeader"] = "Sửa tài khoản " + Model.TenDangNhap;
}

<h2>Chi Tiết</h2>

@using (Html.BeginForm("EditChuaDuyet", "TaiKhoan"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.HoTen, "Họ Tên", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GioiTinh, "Giới tính", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.GioiTinh == true)
            {
                <p>Nam</p>
            }
            else
            {
                <p>Nữ</p>
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TenDangNhap, "Tên Đăng Nhập", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*<input type="text" value="@Model.TenDangNhap" readonly class="form-control" />*@
            @Html.EditorFor(model => model.TenDangNhap, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TenDangNhap, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2", type = "emai" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DiaChi, "Địa Chỉ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TrangThai, "Trạng Thái", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                Vô hiệu:   @Html.RadioButtonFor(model => model.TrangThai, "false") &emsp;&emsp;
                Kích hoạt: @Html.RadioButtonFor(model => model.TrangThai, "true")
                @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quyen, "Quyền", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.Quyen == true)
            {
                <p>Admin</p>
            }
            else
            {
                <p>Người dùng</p>
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NgaySinh, "Ngày Sinh", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.NgaySinh, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Quay về", "ChuaDuyetTK")
</div>
@section Scripts
{
    @{
        var message_done = ViewBag.Done;
        var message_err = ViewBag.Error;

    }
    <script>
        var message_done = '@Html.Raw(message_done)';
        var message_err = '@Html.Raw(message_err)';
        var inputPass = $('.inputPass');
        if (message_done != "" && message_done != null) {
            toastr.success(message_done, 'Thành công!');
        } else if (message_err != "" && message_err != null) {
            toastr.error(message_err, 'Lỗi!');
        }
        $('input[name="ckeckTMK"]').on("click", function () {
            if ($('input[name="ckeckTMK"]').is(':checked')) {
                inputPass.addClass('d-block');
                inputPass.removeClass("d-none");
            } else {
                inputPass.removeClass('d-block');
                inputPass.addClass("d-none");
            }
            console.log(inputPass)
        })
    </script>
}
